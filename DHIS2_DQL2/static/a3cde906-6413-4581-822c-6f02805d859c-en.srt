0
00:00:00,000 --> 00:00:01,610
- [Yuri] Good morning or good afternoon.

1
00:00:01,610 --> 00:00:03,140
Hello everyone.

2
00:00:03,140 --> 00:00:04,290
My name is Yuri,

3
00:00:04,290 --> 00:00:09,290
and I&#39;m working here in Norway with tracker implementation.

4
00:00:11,430 --> 00:00:12,620
I hope you can hear me well.

5
00:00:12,620 --> 00:00:14,433
And Scott, do you see my screen?

6
00:00:15,440 --> 00:00:16,290
Can you?

7
00:00:16,290 --> 00:00:18,250
- [Scott] Yeah, looks great and hear you fine.

8
00:00:18,250 --> 00:00:19,180
- [Yuri] Okay.

9
00:00:19,180 --> 00:00:24,180
So I will show you how to move the tracker data

10
00:00:26,840 --> 00:00:31,310
to aggregate data sets today.

11
00:00:31,310 --> 00:00:34,180
And as Scott mentioned, you know,

12
00:00:34,180 --> 00:00:37,260
capturing this individual level data in DHIS2

13
00:00:38,270 --> 00:00:41,061
does improve the quality of data

14
00:00:41,061 --> 00:00:44,703
that we report to the aggregate HMIS,

15
00:00:45,587 --> 00:00:48,280
and it also helps us, you know,

16
00:00:48,280 --> 00:00:53,210
to get to the analysis of data as regular,

17
00:00:53,210 --> 00:00:54,973
as often as required.

18
00:00:56,180 --> 00:00:57,250
So I first

19
00:00:59,570 --> 00:01:03,130
got familiar with this question of how we transfer the data

20
00:01:03,130 --> 00:01:06,720
when I was working on the TB case surveillance

21
00:01:06,720 --> 00:01:10,980
on the tracker module that has been published

22
00:01:10,980 --> 00:01:13,080
now in August.

23
00:01:13,080 --> 00:01:15,890
And so my examples that I will share with you

24
00:01:15,890 --> 00:01:19,610
will be based on the TB case surveillance.

25
00:01:19,610 --> 00:01:24,610
So as you know, for countries that implement tracker,

26
00:01:24,750 --> 00:01:29,150
it is recommended that they use two instances for one,

27
00:01:29,150 --> 00:01:33,530
for aggregate modules and one for tracker apps.

28
00:01:33,530 --> 00:01:36,770
And so by maintaining these separate track

29
00:01:36,770 --> 00:01:38,250
and aggregate instances,

30
00:01:38,250 --> 00:01:43,250
the performance can be best managed by admins and the tools

31
00:01:44,900 --> 00:01:49,900
so that the data can be protected and used as required.

32
00:01:53,710 --> 00:01:58,400
So basically what we do is that when we collect

33
00:01:58,400 --> 00:02:01,323
the individual data in tracker,

34
00:02:02,405 --> 00:02:07,405
it is being aggregated via program indicators.

35
00:02:09,174 --> 00:02:14,174
So when we produce the analytics in tracker,

36
00:02:15,310 --> 00:02:17,390
sometimes we&#39;re liking those dimensions

37
00:02:17,390 --> 00:02:22,390
that the aggregate world allows us to use.

38
00:02:22,610 --> 00:02:27,610
And therefore, we need that step of transferring the data

39
00:02:29,080 --> 00:02:31,723
from tracker to the aggregate modules.

40
00:02:33,020 --> 00:02:38,020
And I&#39;m going to talk about two ways of doing that.

41
00:02:39,410 --> 00:02:42,153
One is more user-friendly,

42
00:02:44,530 --> 00:02:46,710
and this is a solution

43
00:02:46,710 --> 00:02:50,360
that has been developed by HISP Uganda,

44
00:02:50,360 --> 00:02:54,680
and I just would like to say thank you

45
00:02:54,680 --> 00:02:59,680
to my colleagues in Uganda who shared that information

46
00:02:59,710 --> 00:03:03,760
with me and helped me at the beginning.

47
00:03:03,760 --> 00:03:06,470
And the other way, the other solution I will talk about

48
00:03:06,470 --> 00:03:10,060
is a script approach

49
00:03:11,046 --> 00:03:15,680
that requires more tech knowledge.

50
00:03:15,680 --> 00:03:20,640
So first,

51
00:03:20,640 --> 00:03:24,120
the app that you can all use in DHIS2

52
00:03:26,540 --> 00:03:30,780
is called the Data Import Wizard developed by HISP Uganda.

53
00:03:30,780 --> 00:03:35,323
So it has a user-friendly interface,

54
00:03:35,323 --> 00:03:38,550
it supports various import types,

55
00:03:38,550 --> 00:03:41,990
and you can save your mappings and edit them

56
00:03:41,990 --> 00:03:46,990
and have a good way of controlling them.

57
00:03:47,210 --> 00:03:49,720
But the consideration that you need,

58
00:03:49,720 --> 00:03:52,210
well, things that you need to think about as you use the app

59
00:03:52,210 --> 00:03:56,520
is that the mapping process is manual

60
00:03:56,520 --> 00:04:00,050
and it&#39;s best suited for small scale data sets.

61
00:04:00,050 --> 00:04:03,650
So basically if you have to transfer a lot of data

62
00:04:03,650 --> 00:04:08,650
from your tracker to the aggregate modules

63
00:04:08,810 --> 00:04:13,288
and you have a lot of indicators or data elements to feed,

64
00:04:13,288 --> 00:04:18,288
you&#39;ll be better off using the other solutions.

65
00:04:20,240 --> 00:04:22,160
So how does it work?

66
00:04:22,160 --> 00:04:24,920
I&#39;ll just say a few words,

67
00:04:24,920 --> 00:04:27,635
and then I will show it to you on the example

68
00:04:27,635 --> 00:04:29,880
on the instance.

69
00:04:29,880 --> 00:04:34,880
So once you install the app from the app store in DHIS2,

70
00:04:36,009 --> 00:04:40,442
you have to do it in your aggregate instance

71
00:04:40,442 --> 00:04:43,030
and then you can start with a new mapping.

72
00:04:43,030 --> 00:04:45,860
So as you configure it,

73
00:04:45,860 --> 00:04:47,520
I will walk you through the steps now.

74
00:04:47,520 --> 00:04:51,877
You will see that it&#39;s quite simple.

75
00:04:52,980 --> 00:04:56,253
So let me see if you can.

76
00:04:58,370 --> 00:05:01,640
I&#39;m trying to make sure that,

77
00:05:01,640 --> 00:05:04,143
Scott, did you see that I switched the screen now?

78
00:05:05,503 --> 00:05:08,449
- [Scott] Yes, we can see that you&#39;re looking at DHIS2,

79
00:05:08,449 --> 00:05:10,040
the who-dev.

80
00:05:10,040 --> 00:05:12,777
- [Yuri] Yeah, okay, so as you see here

81
00:05:12,777 --> 00:05:16,730
is my tracker instance with a whole list

82
00:05:16,730 --> 00:05:21,730
of program indicators that I&#39;ve created for my data.

83
00:05:25,895 --> 00:05:28,000
And as I said, you know,

84
00:05:28,000 --> 00:05:33,000
for each of the data element in the aggregate set,

85
00:05:34,200 --> 00:05:36,800
I have to create a program indicator.

86
00:05:36,800 --> 00:05:41,400
So I need to create one for the age,

87
00:05:41,400 --> 00:05:45,330
the segregation for sex, and so on and so forth.

88
00:05:45,330 --> 00:05:49,578
Here is my aggregate instance

89
00:05:49,578 --> 00:05:53,763
with the report forms on the TB.

90
00:05:54,660 --> 00:05:56,920
And as you see, this form is empty now.

91
00:05:56,920 --> 00:06:00,800
So we&#39;ll try to fill it in with some data.

92
00:06:00,800 --> 00:06:05,510
So here is the app that I was talking about,

93
00:06:05,510 --> 00:06:08,140
the Data Import Wizard.

94
00:06:08,140 --> 00:06:13,100
So once I start it up, it actually serves many purposes.

95
00:06:13,100 --> 00:06:17,370
It can help you import dummy data into your instance

96
00:06:18,620 --> 00:06:20,660
or data from Excel or whatever,

97
00:06:20,660 --> 00:06:23,590
but we are talking about the aggregate import.

98
00:06:23,590 --> 00:06:27,040
So once I start a new mapping,

99
00:06:27,040 --> 00:06:31,230
so basically I will have an overview of the data sets

100
00:06:31,230 --> 00:06:35,070
that are present in my instance.

101
00:06:35,070 --> 00:06:40,070
And here I will go and take the TB case notification.

102
00:06:43,710 --> 00:06:45,683
So I have to create a mapping name,

103
00:06:50,250 --> 00:06:53,020
and choose the import type.

104
00:06:53,020 --> 00:06:54,400
So in this case,

105
00:06:54,400 --> 00:06:58,770
I&#39;m going to import DHIS2 indicators

106
00:06:58,770 --> 00:07:02,940
into a DHIS2 aggregate data set.

107
00:07:02,940 --> 00:07:05,030
So I go for program indicators,

108
00:07:05,030 --> 00:07:10,030
I have to specify the address of my tracker instance,

109
00:07:10,040 --> 00:07:13,033
which will be this.

110
00:07:16,970 --> 00:07:18,470
So I put it in here,

111
00:07:18,470 --> 00:07:23,470
and then I have to log in with the system admin password

112
00:07:26,680 --> 00:07:30,643
that has access to the instance.

113
00:07:32,660 --> 00:07:34,573
Let&#39;s see if I get it right this time.

114
00:07:35,880 --> 00:07:36,760
Because in the app

115
00:07:36,760 --> 00:07:38,660
you can see the actual password,

116
00:07:38,660 --> 00:07:39,883
you don&#39;t see the stars.

117
00:07:40,730 --> 00:07:41,563
Let&#39;s see.

118
00:07:54,300 --> 00:07:55,910
So that was right.

119
00:07:55,910 --> 00:08:00,670
So now, here I have to specify what period of time

120
00:08:00,670 --> 00:08:02,810
I want my mapping to work for.

121
00:08:02,810 --> 00:08:06,230
So I will take a 2020,

122
00:08:06,230 --> 00:08:08,313
and I will take the first quarter.

123
00:08:09,550 --> 00:08:11,453
Indicate aggregation level.

124
00:08:12,320 --> 00:08:14,740
Okay, so we can do a facility.

125
00:08:14,740 --> 00:08:18,550
And then we need to map the facilities

126
00:08:19,790 --> 00:08:22,660
on the tracker instance with the facilities

127
00:08:22,660 --> 00:08:26,097
or with org units on the aggregate instance.

128
00:08:29,130 --> 00:08:31,640
But as you see, if the names are matching,

129
00:08:31,640 --> 00:08:34,710
then the mapping happens automatically.

130
00:08:34,710 --> 00:08:37,360
I don&#39;t need to do much here.

131
00:08:37,360 --> 00:08:39,550
Then I can filter my indicators.

132
00:08:39,549 --> 00:08:43,397
And these are the indicators that I want to send data

133
00:08:44,900 --> 00:08:47,740
to my aggregate modules.

134
00:08:47,740 --> 00:08:52,237
And I&#39;ve been using the prefixing in the indicators

135
00:08:54,670 --> 00:08:58,130
that I&#39;ve created, so I can assign all of that.

136
00:08:59,790 --> 00:09:03,177
And then I can move to the next step.

137
00:09:04,570 --> 00:09:08,938
Here, I have the data sets

138
00:09:08,938 --> 00:09:13,010
that you see that I need to manually map.

139
00:09:13,010 --> 00:09:15,660
And this is what I mentioned earlier

140
00:09:15,660 --> 00:09:20,660
that for data sets that include just a few indicators,

141
00:09:21,440 --> 00:09:25,630
this is the way to go with this app.

142
00:09:25,630 --> 00:09:28,940
If you have several hundreds or thousands of elements,

143
00:09:28,940 --> 00:09:33,450
you need to map, this will be a cumbersome process.

144
00:09:33,450 --> 00:09:38,170
So let&#39;s say here is my agent sets TB form.

145
00:09:38,170 --> 00:09:41,313
And here I can select the indicators that I,

146
00:09:44,257 --> 00:09:46,363
that can feed into it.

147
00:09:49,250 --> 00:09:52,253
So I can also look for the indicators.

148
00:09:54,460 --> 00:09:57,710
Okay, so if it&#39;s this one, and here is,

149
00:10:00,180 --> 00:10:02,423
oh no, that it was a female, sorry.

150
00:10:05,320 --> 00:10:07,483
Female and I need a male.

151
00:10:10,060 --> 00:10:15,060
Here, and then I will find one for female here and so on.

152
00:10:19,960 --> 00:10:23,850
So I proceed like that till I reached the end,

153
00:10:23,850 --> 00:10:25,433
and when I click next.

154
00:10:26,960 --> 00:10:29,060
So right now, I didn&#39;t do all of this,

155
00:10:29,060 --> 00:10:33,667
but if I did, I would be shown the,

156
00:10:36,360 --> 00:10:39,410
I will see the status that all of my indicators

157
00:10:39,410 --> 00:10:40,893
in that form were mapped.

158
00:10:43,610 --> 00:10:48,610
I guess it takes so long because of the fact

159
00:10:49,080 --> 00:10:52,133
that I have not selected everything here yet.

160
00:10:53,230 --> 00:10:55,810
So I will just interrupt this process,

161
00:10:55,810 --> 00:11:00,810
and I will show you a mapping that I&#39;ve created earlier.

162
00:11:03,840 --> 00:11:07,930
And you will see what it does.

163
00:11:07,930 --> 00:11:10,690
So let&#39;s see, move on to the next step.

164
00:11:10,690 --> 00:11:13,143
So here are my mappings.

165
00:11:15,090 --> 00:11:17,520
And here, you can see that

166
00:11:20,609 --> 00:11:23,840
the import summary of my job

167
00:11:23,840 --> 00:11:28,208
that I have updated eight values from my mapping,

168
00:11:28,208 --> 00:11:31,050
and I can save it as adjacent file,

169
00:11:31,050 --> 00:11:35,963
or I can also see, sorry.

170
00:11:38,300 --> 00:11:42,340
I could also see the report on what has been done.

171
00:11:42,340 --> 00:11:47,340
And if I go to my aggregate module now,

172
00:11:48,570 --> 00:11:52,363
I will be able to see the data that has been filled in.

173
00:11:53,570 --> 00:11:57,483
Okay, so this is how this app works.

174
00:11:58,454 --> 00:12:01,293
Basically what&#39;s in the background,

175
00:12:04,480 --> 00:12:07,630
there&#39;s a JSON file that is generated with a payload

176
00:12:07,630 --> 00:12:12,363
and then it&#39;s uploaded to the aggregate module.

177
00:12:13,440 --> 00:12:14,273
So,

178
00:12:19,490 --> 00:12:24,490
the next way of moving the data to the aggregate modules

179
00:12:25,810 --> 00:12:27,040
is the script.

180
00:12:27,040 --> 00:12:29,460
And here, I&#39;m referring to the script

181
00:12:29,460 --> 00:12:31,460
that has been developed by (indistinct).

182
00:12:33,805 --> 00:12:35,893
A lot of you might know him.

183
00:12:35,893 --> 00:12:39,523
And we are now working on upgrading this script

184
00:12:41,939 --> 00:12:46,510
so that it will be more universal in what it&#39;s doing,

185
00:12:46,510 --> 00:12:51,510
and also provide more feedback to the user once it&#39;s run.

186
00:12:55,160 --> 00:12:57,680
So it&#39;s a shell executable script

187
00:12:57,680 --> 00:13:00,550
that requires some initial setup,

188
00:13:00,550 --> 00:13:02,940
and I will walk you through that.

189
00:13:02,940 --> 00:13:07,830
And you can also set up automated periodic explorer of data

190
00:13:07,830 --> 00:13:12,760
with that script to aggregate with a,

191
00:13:12,760 --> 00:13:16,330
well, by using, let&#39;s say a task scheduler.

192
00:13:16,330 --> 00:13:21,330
So there&#39;s some work that needs to be done for that.

193
00:13:21,480 --> 00:13:24,454
And this is what I started

194
00:13:24,454 --> 00:13:29,050
when I worked on the TB case surveillance.

195
00:13:29,050 --> 00:13:32,020
So basically, on the aggregate side,

196
00:13:32,020 --> 00:13:35,030
you have the data elements

197
00:13:35,030 --> 00:13:37,510
and the category option combinations

198
00:13:38,600 --> 00:13:40,323
that need to be coded.

199
00:13:41,470 --> 00:13:44,070
So here is an example,

200
00:13:44,070 --> 00:13:48,853
as you can see, of a data element and the code

201
00:13:50,220 --> 00:13:52,308
that it receives.

202
00:13:52,308 --> 00:13:56,830
And here is an example of a category option combination

203
00:13:56,830 --> 00:13:58,553
with a code.

204
00:13:59,660 --> 00:14:04,660
So I will need these codes to map my program indicators

205
00:14:04,967 --> 00:14:09,193
in the tracker instance in order to,

206
00:14:10,707 --> 00:14:14,490
for this transfer to be successful.

207
00:14:14,490 --> 00:14:18,083
So on the tracker, we will need,

208
00:14:19,640 --> 00:14:22,673
as you see here, I will move to my indicators.

209
00:14:26,630 --> 00:14:31,240
As you see here, there is an element or an attribute here

210
00:14:31,240 --> 00:14:33,760
called category option combination

211
00:14:33,760 --> 00:14:35,640
for aggregate data export.

212
00:14:35,640 --> 00:14:40,640
So here, I map my category option combinations

213
00:14:41,590 --> 00:14:45,423
from the aggregate modules,

214
00:14:47,630 --> 00:14:52,630
and I will also need to create a custom attribute,

215
00:14:53,291 --> 00:14:58,291
which we call data element for aggregate data export.

216
00:14:58,980 --> 00:15:03,980
So we can then map it to the data element

217
00:15:05,650 --> 00:15:07,223
in the aggregate package.

218
00:15:08,170 --> 00:15:13,170
At this stage, I would just like to point out

219
00:15:13,180 --> 00:15:18,103
that there is a bug in the DHIS2 now

220
00:15:21,220 --> 00:15:26,220
that prevents the user from creating the custom attribute

221
00:15:27,600 --> 00:15:32,600
for program indicators in the maintenance app.

222
00:15:33,250 --> 00:15:35,120
We are working on that bug,

223
00:15:35,120 --> 00:15:39,730
but when we deliver our generic packages,

224
00:15:39,730 --> 00:15:41,920
let&#39;s say TB case surveillance,

225
00:15:41,920 --> 00:15:44,440
these come with these custom attributes

226
00:15:44,440 --> 00:15:48,170
because these custom attributes can still be

227
00:15:49,120 --> 00:15:54,120
injected into the properties of an indicator via API.

228
00:15:55,000 --> 00:15:58,980
So if you have any questions on that

229
00:15:58,980 --> 00:16:00,380
or how this can be done,

230
00:16:00,380 --> 00:16:04,690
you can get in touch with us and we will help you

231
00:16:04,690 --> 00:16:06,210
in this process.

232
00:16:06,210 --> 00:16:09,370
But once this bug has been resolved,

233
00:16:09,370 --> 00:16:13,320
it will be easier for users to actually

234
00:16:13,320 --> 00:16:15,990
just enter those mappings here,

235
00:16:15,990 --> 00:16:18,030
because this is where it will appear

236
00:16:18,030 --> 00:16:19,803
when you create the attribute.

237
00:16:21,170 --> 00:16:26,120
So, what is done afterwards?

238
00:16:26,120 --> 00:16:27,523
So you have a,

239
00:16:29,036 --> 00:16:34,036
this is what the script looks like now.

240
00:16:35,220 --> 00:16:40,220
So basically, we need to edit the list of program indicators

241
00:16:43,640 --> 00:16:47,873
that we are going to use to push the data.

242
00:16:49,040 --> 00:16:52,290
We have to specify the org unit levels

243
00:16:52,290 --> 00:16:56,258
at which we do this transfer,

244
00:16:56,258 --> 00:16:58,273
as well as the periods.

245
00:17:00,210 --> 00:17:05,210
And then we need to specify the data attribute, your ID.

246
00:17:05,250 --> 00:17:08,470
And this is the attribute that I was talking about

247
00:17:08,470 --> 00:17:10,253
for the data elements.

248
00:17:11,819 --> 00:17:15,910
And then we need to specify the servers that we&#39;re using.

249
00:17:15,910 --> 00:17:18,550
So here is our source URL.

250
00:17:18,550 --> 00:17:22,270
This is the tracker and our target URL,

251
00:17:22,270 --> 00:17:25,270
which is the aggregate package.

252
00:17:25,270 --> 00:17:30,270
We make sure that the date format is correct in this field.

253
00:17:33,280 --> 00:17:37,930
And then, we specify the file name that will be created

254
00:17:37,930 --> 00:17:42,130
for transferring the data and the comments

255
00:17:42,130 --> 00:17:45,250
that will be added to the database.

256
00:17:45,250 --> 00:17:50,020
And basically then we need to update the user

257
00:17:50,020 --> 00:17:55,020
and the password for the servers.

258
00:17:55,920 --> 00:17:58,410
And basically this is it.

259
00:17:58,410 --> 00:18:03,410
So we need to, because it&#39;s a shell script,

260
00:18:03,830 --> 00:18:08,107
we need to make it executable with a CHMOD command.

261
00:18:10,300 --> 00:18:15,110
And then we can run it in the shell

262
00:18:15,110 --> 00:18:17,073
or in the terminal on the Mac.

263
00:18:18,270 --> 00:18:23,270
And then if you need automated data transfer,

264
00:18:23,410 --> 00:18:27,815
you can use the scheduler

265
00:18:27,815 --> 00:18:31,973
in order to make these transfers periodic.

266
00:18:32,870 --> 00:18:35,970
And I think I&#39;ve forgotten to save it

267
00:18:35,970 --> 00:18:39,030
in the HISP Uganda app.

268
00:18:39,030 --> 00:18:44,030
The Data Import Wizard also offers you scheduling

269
00:18:44,871 --> 00:18:49,560
for the jobs that you create there.

270
00:18:49,560 --> 00:18:54,560
So this is basically what I wanted to show you today.

271
00:18:58,777 --> 00:19:03,777
And as I said, if you have any questions,

272
00:19:04,210 --> 00:19:09,210
please use the channel and the community of practice to,

273
00:19:09,790 --> 00:19:11,630
we&#39;ll be happy to answer these questions.

274
00:19:11,630 --> 00:19:16,304
And if you need support with the script

275
00:19:16,304 --> 00:19:18,170
or with the transfer from aggregate,

276
00:19:18,170 --> 00:19:19,790
please do get in touch with us,

277
00:19:19,790 --> 00:19:23,583
and we&#39;ll guide you further in that process.

278
00:19:24,550 --> 00:19:25,623
So, thanks.

279
00:19:26,680 --> 00:19:27,670
- [Scott] Great, thanks so much, Yuri.

280
00:19:27,670 --> 00:19:29,740
There are a few questions that maybe you can answer

281
00:19:29,740 --> 00:19:30,940
right away for us here.

282
00:19:30,940 --> 00:19:32,870
There&#39;s quite a, actually, there&#39;s quite a lot

283
00:19:32,870 --> 00:19:33,963
of conversation here.

284
00:19:35,118 --> 00:19:36,363
So the,

285
00:19:37,870 --> 00:19:39,420
sorry, the one question that&#39;s,

286
00:19:41,320 --> 00:19:43,510
one question that&#39;s been asked a couple of times,

287
00:19:43,510 --> 00:19:45,920
and I think you just answered it is

288
00:19:45,920 --> 00:19:48,900
using that application, the HISP Uganda application,

289
00:19:48,900 --> 00:19:50,920
you can schedule jobs.

290
00:19:50,920 --> 00:19:52,877
So once you set up the mapping,

291
00:19:52,877 --> 00:19:56,974
you can schedule it to run periodically, correct?

292
00:19:56,974 --> 00:19:58,270
- [Yuri] Yes, yes.

293
00:19:58,270 --> 00:19:59,103
- [Scott] Okay.

294
00:20:00,000 --> 00:20:05,000
And then what if you have aggregate and tracker data

295
00:20:05,560 --> 00:20:07,070
in the same instance,

296
00:20:07,070 --> 00:20:10,853
does that app also work in that situation?

297
00:20:12,220 --> 00:20:13,170
- [Yuri] Yes.

298
00:20:13,170 --> 00:20:16,590
I don&#39;t think there&#39;s any restriction in regard to that.

299
00:20:16,590 --> 00:20:21,113
So you will just have to specify the same instance twice,

300
00:20:22,396 --> 00:20:26,307
and then you will be able, the transfer will happen.

301
00:20:28,030 --> 00:20:28,863
- [Scott] Great.

302
00:20:29,830 --> 00:20:34,830
Then is there, are you able to provide contact details

303
00:20:37,320 --> 00:20:40,120
for folks who may need assistance using the app

304
00:20:40,120 --> 00:20:42,350
or using the script?

305
00:20:42,350 --> 00:20:43,270
- [Yuri] Yes, with pleasure.

306
00:20:43,270 --> 00:20:48,270
So how do I, do I just paste a paste it in the chat here?

307
00:20:48,620 --> 00:20:50,110
- [Scott] Well, if you&#39;re fine with me

308
00:20:50,110 --> 00:20:51,130
just giving out your email,

309
00:20:51,130 --> 00:20:53,393
I can paste it here in the chat.

310
00:20:54,384 --> 00:20:56,140
Or in our Slack.

311
00:20:56,140 --> 00:20:57,380
- [Yuri] Yeah.

312
00:20:57,380 --> 00:20:58,213
- [Scott] Okay.

313
00:21:00,100 --> 00:21:03,500
Is there a step-by-step guide that you have

314
00:21:03,500 --> 00:21:05,950
for using the application?

315
00:21:05,950 --> 00:21:09,590
- [Yuri] We are, I don&#39;t have a step-by-step guide

316
00:21:10,490 --> 00:21:15,410
right now, so I can copy from the notes

317
00:21:15,410 --> 00:21:18,410
that I&#39;m made for the presentation,

318
00:21:18,410 --> 00:21:22,210
and I can upload it to or I can either post it on Slack

319
00:21:22,210 --> 00:21:24,553
or on the community of practice.

320
00:21:26,280 --> 00:21:29,873
And I will also do the same for the script.

321
00:21:33,130 --> 00:21:37,529
The script will be the way it looks now.

322
00:21:37,529 --> 00:21:40,170
So basically what we&#39;re trying to do

323
00:21:40,170 --> 00:21:43,760
is that we&#39;re trying to make it more user-friendly

324
00:21:43,760 --> 00:21:46,023
so it will give you feedback and it will,

325
00:21:47,039 --> 00:21:50,293
you know, on what it&#39;s doing basically.

326
00:21:51,290 --> 00:21:55,193
So there&#39;ll be more kind of a validation of the process.

327
00:21:57,050 --> 00:22:02,050
But again, you know, the interface requires more time

328
00:22:02,520 --> 00:22:07,520
than the actual, you know, script that does the job.

329
00:22:07,600 --> 00:22:08,950
- [Yuri] Right, right.

330
00:22:08,950 --> 00:22:11,883
Yeah, those would be two very useful resources.

331
00:22:12,800 --> 00:22:15,560
Another question is are we using that same app?

332
00:22:15,560 --> 00:22:16,800
Are you able to

333
00:22:20,230 --> 00:22:25,230
move data, have interoperability between two DHIS2 instances

334
00:22:25,300 --> 00:22:27,710
that are just having aggregate data?

335
00:22:27,710 --> 00:22:29,670
For example, you have aggregate data in one,

336
00:22:29,670 --> 00:22:31,700
and you wanna move that aggregated data to another.

337
00:22:31,700 --> 00:22:34,120
Are you also able to use that app for that?

338
00:22:34,120 --> 00:22:36,010
- [Yuri] I have not tested it for this,

339
00:22:36,010 --> 00:22:41,010
but from what I see when I create a new app,

340
00:22:41,100 --> 00:22:44,033
so let me just create a new mapping.

341
00:22:45,404 --> 00:22:46,720
- [Scott] Feel free to, you can share

342
00:22:46,720 --> 00:22:49,340
your screen again as well. - [Yuri] Okay.

343
00:22:49,340 --> 00:22:50,193
Let me see.

344
00:22:51,890 --> 00:22:53,963
We are here now.

345
00:22:55,610 --> 00:22:57,021
Okay.

346
00:22:57,021 --> 00:23:00,420
So if I create a new mapping,

347
00:23:00,420 --> 00:23:03,050
so these are the options that I have.

348
00:23:03,050 --> 00:23:07,700
I have DHIS2 to DHIS2 data set,

349
00:23:07,700 --> 00:23:09,690
which I think is answer to the question.

350
00:23:09,690 --> 00:23:13,393
So I can move that from one data set to the other,

351
00:23:15,020 --> 00:23:16,760
or from indicators.

352
00:23:16,760 --> 00:23:18,180
Let&#39;s say I could even

353
00:23:20,068 --> 00:23:23,860
move the data from the aggregate indicators here

354
00:23:25,571 --> 00:23:28,620
to the DHIS2 data set.

355
00:23:28,620 --> 00:23:30,418
- [Yuri] Right, okay.

356
00:23:30,418 --> 00:23:32,183
- [Yuri] So both ways are possible.

357
00:23:33,527 --> 00:23:34,630
- [Scott] Cool, that&#39;s great to see.

358
00:23:34,630 --> 00:23:36,920
I think we actually have some HISP Uganda folks

359
00:23:36,920 --> 00:23:38,200
that are participants.

360
00:23:38,200 --> 00:23:41,470
And so, they&#39;re actually answering

361
00:23:41,470 --> 00:23:44,150
some of the questions themselves, which is really cool.

362
00:23:44,150 --> 00:23:46,510
And in general, I think it&#39;s important to point out

363
00:23:46,510 --> 00:23:50,790
that this is a great example of how the DHIS2 community

364
00:23:50,790 --> 00:23:53,550
is able to help each other, right?

365
00:23:53,550 --> 00:23:56,190
So what Yuri is presenting is not an app

366
00:23:56,190 --> 00:23:57,970
made by the University of Oslo.

367
00:23:57,970 --> 00:24:02,379
It is a fantastic app made by HISP Uganda,

368
00:24:02,379 --> 00:24:04,840
and it&#39;s just made in a generic way

369
00:24:04,840 --> 00:24:08,180
so that everyone in the world can use it.

370
00:24:08,180 --> 00:24:09,700
But that being said,

371
00:24:09,700 --> 00:24:13,160
if you are using this app and you are dependent on this app,

372
00:24:13,160 --> 00:24:14,880
I would strongly encourage you

373
00:24:14,880 --> 00:24:18,190
to consider supporting HISP Uganda.

374
00:24:18,190 --> 00:24:21,860
You know, everything in DHIS2 is open and free to use,

375
00:24:21,860 --> 00:24:23,000
but that doesn&#39;t mean that things

376
00:24:23,000 --> 00:24:25,230
are sustainable indefinitely.

377
00:24:25,230 --> 00:24:27,490
And I just wanna strongly say

378
00:24:27,490 --> 00:24:30,060
and encourage you that if you start to use this app,

379
00:24:30,060 --> 00:24:32,010
appreciate that this app is not developed

380
00:24:32,010 --> 00:24:33,410
by the University of Oslo,

381
00:24:33,410 --> 00:24:36,380
and that there&#39;s a development team in Uganda

382
00:24:36,380 --> 00:24:38,740
that is working to keep this app alive.

383
00:24:38,740 --> 00:24:40,740
And if you are dependent on this app,

384
00:24:40,740 --> 00:24:42,510
I would strongly encourage you

385
00:24:42,510 --> 00:24:44,390
to get in contact with HISP Uganda.

386
00:24:44,390 --> 00:24:46,200
We can provide those contact information,

387
00:24:46,200 --> 00:24:49,950
and talk to them about how you can support their effort

388
00:24:49,950 --> 00:24:53,350
to continue to develop and keep this app alive.

389
00:24:53,350 --> 00:24:56,119
There are many apps in DHIS2 that,

390
00:24:56,119 --> 00:24:57,675
you know, the University of Oslo,

391
00:24:57,675 --> 00:24:59,820
we only develop about 30 apps,

392
00:24:59,820 --> 00:25:03,140
but there are over a hundred apps out there.

393
00:25:03,140 --> 00:25:05,220
And so if there&#39;s a good chance

394
00:25:05,220 --> 00:25:07,880
that you&#39;re actually using an app that we didn&#39;t develop,

395
00:25:07,880 --> 00:25:10,423
and if you wanna continue using these apps,

396
00:25:12,038 --> 00:25:14,420
I strongly encourage you to figure out who developed them,

397
00:25:14,420 --> 00:25:16,640
and then to figure out if you can support them.

398
00:25:16,640 --> 00:25:18,880
In this case, HISP Uganda, fantastic app.

399
00:25:18,880 --> 00:25:20,270
So good that we&#39;re supporting it,

400
00:25:20,270 --> 00:25:23,100
or that we&#39;re presenting it here in the academy

401
00:25:23,100 --> 00:25:25,363
as kind of one of our default solutions.

402
00:25:26,810 --> 00:25:28,810
There is one more question for you, Yuri.

403
00:25:28,810 --> 00:25:33,163
Are you aware of the metadata sync app at all?

404
00:25:35,160 --> 00:25:35,993
- [Yuri] No.

405
00:25:37,094 --> 00:25:42,094
Well, is that what&#39;s called, a metadata sync?

406
00:25:43,160 --> 00:25:47,110
- [Scott] I think the question is coming from Lisa from WHO.

407
00:25:47,110 --> 00:25:49,860
She&#39;s asking if we&#39;re aware of the metadata sync app,

408
00:25:49,860 --> 00:25:52,623
and it would be nice if we joined the efforts.

409
00:25:54,867 --> 00:25:56,240
I&#39;m not fully aware.

410
00:25:56,240 --> 00:25:59,460
Again, there&#39;s many apps being developed all the time.

411
00:25:59,460 --> 00:26:01,340
I&#39;m finding out about new apps, you know,

412
00:26:01,340 --> 00:26:03,730
almost on a weekly basis myself.

413
00:26:03,730 --> 00:26:04,790
I&#39;m not aware of that app,

414
00:26:04,790 --> 00:26:09,133
and maybe that app may do something similar I&#39;m assuming.

415
00:26:09,133 --> 00:26:11,744
- [Yuri] I have seen this app.

416
00:26:11,744 --> 00:26:13,933
To be honest, I have not tried it out,

417
00:26:14,940 --> 00:26:19,940
but it&#39;s the metadata sync app, right?

418
00:26:21,330 --> 00:26:25,025
So, and I looked at it briefly

419
00:26:25,025 --> 00:26:27,100
when I was preparing for this,

420
00:26:27,100 --> 00:26:30,430
because I wanted to make sure that, you know,

421
00:26:30,430 --> 00:26:34,640
I see if there are other apps that serve the same purpose,

422
00:26:34,640 --> 00:26:36,890
because I&#39;m sure, you know,

423
00:26:36,890 --> 00:26:39,370
that even with this script that I presented

424
00:26:39,370 --> 00:26:43,120
that we might have some community members

425
00:26:43,120 --> 00:26:45,990
that have developed their own ways,

426
00:26:45,990 --> 00:26:50,990
and maybe they are more advanced than what I shared.

427
00:26:51,080 --> 00:26:56,040
And this is just to emphasize what you said

428
00:26:56,040 --> 00:26:58,380
about the power of community.

429
00:26:58,380 --> 00:27:01,460
So it is great that we can reach out to each other

430
00:27:01,460 --> 00:27:03,610
and get each other&#39;s support in this.

431
00:27:03,610 --> 00:27:06,860
But I will definitely look into the metadata sync app

432
00:27:08,980 --> 00:27:11,982
and see what it--

433
00:27:11,982 --> 00:27:14,080
- [Scott] Yeah, it&#39;s coming from Lisa Grout

434
00:27:14,080 --> 00:27:15,830
and Tina (indistinct).

435
00:27:15,830 --> 00:27:18,050
I think that they would,

436
00:27:18,050 --> 00:27:19,447
maybe we can connect the dots

437
00:27:19,447 --> 00:27:22,730
and they can reach out as well.

438
00:27:22,730 --> 00:27:24,993
They just posted a link to it.

439
00:27:26,570 --> 00:27:27,403
- [Yuri] Scott, by the way,

440
00:27:27,403 --> 00:27:29,963
can you add me to the Slack channel?

441
00:27:31,840 --> 00:27:33,115
- [Scott] Yeah.

442
00:27:33,115 --> 00:27:36,183
We&#39;ll have Martin do that as well.

443
00:27:37,330 --> 00:27:38,560
- [Woman] Scott?

444
00:27:38,560 --> 00:27:39,893
- [Scott] Yes?

445
00:27:39,893 --> 00:27:42,510
- [Woman] They&#39;re two questions about using this app

446
00:27:42,510 --> 00:27:45,660
to input data from Excel into tracker

447
00:27:46,860 --> 00:27:48,963
on the announcements I think.

448
00:27:52,210 --> 00:27:54,090
- [Scott] Have you experienced that, Yuri?

449
00:27:54,090 --> 00:27:57,254
Or I believe Sam from HISP Uganda is also in the call.

450
00:27:57,254 --> 00:28:00,550
Have either of you imported data

451
00:28:00,550 --> 00:28:04,533
from Excel into tracker using this app?

452
00:28:06,540 --> 00:28:09,300
- [Yuri] I haven&#39;t been using this app for that purpose,

453
00:28:09,300 --> 00:28:13,073
but maybe Sam can answer the question.

454
00:28:17,595 --> 00:28:18,567
- [Sam] Hello?

455
00:28:18,567 --> 00:28:20,480
- [Scott] Hi there, Sam.

456
00:28:20,480 --> 00:28:21,850
- [Scott] Hey, how are you?

457
00:28:21,850 --> 00:28:25,940
So, I was working with (indistinct)

458
00:28:25,940 --> 00:28:29,260
and specifically this year, we used the app

459
00:28:29,260 --> 00:28:31,363
to input tracker data,

460
00:28:32,530 --> 00:28:35,180
which was coming through Excel from the (indistinct).

461
00:28:36,980 --> 00:28:41,243
So it is possible for import it using the tracker.

462
00:28:41,243 --> 00:28:43,160
The data import reason.

463
00:28:46,520 --> 00:28:48,370
- [Scott] Great, I think that&#39;s a very clear answer.

464
00:28:48,370 --> 00:28:49,203
Thank you so much.

465
00:28:49,203 --> 00:28:50,960
And again, example of the power of the community

466
00:28:50,960 --> 00:28:52,630
that Sam just happened to be here

467
00:28:52,630 --> 00:28:54,430
and be the right person to answer the question

468
00:28:54,430 --> 00:28:55,400
at the right time.

469
00:28:55,400 --> 00:28:56,453
So that&#39;s fantastic.

