0
00:00:00,880 --> 00:00:04,030
- [Narrator] So continuing our discussion with form design,

1
00:00:04,030 --> 00:00:06,800
we can also look at incorrect desegregations.

2
00:00:06,800 --> 00:00:09,900
So in the previous form, we had an incorrect desegregation

3
00:00:09,900 --> 00:00:14,010
because it actually wasn&#39;t meant to be collected at all.

4
00:00:14,010 --> 00:00:16,690
But now when we&#39;re looking at this incorrect desegregation,

5
00:00:16,690 --> 00:00:17,940
I mean, this is valid.

6
00:00:17,940 --> 00:00:19,000
It should be collected.

7
00:00:19,000 --> 00:00:21,400
But if you have a look at the total at the top,

8
00:00:21,400 --> 00:00:24,300
we have desegregations of zero to 11 months,

9
00:00:24,300 --> 00:00:29,300
12 to 59 months, five to 14 years and 15 years plus.

10
00:00:29,880 --> 00:00:33,260
Pregnant women is a subset of 15 years plus.

11
00:00:33,260 --> 00:00:35,250
So when we go to have our total,

12
00:00:35,250 --> 00:00:37,570
we&#39;re going to have duplicates.

13
00:00:37,570 --> 00:00:39,870
And this also becomes an issue in our data quality

14
00:00:39,870 --> 00:00:42,140
because we&#39;re now counting twice

15
00:00:42,140 --> 00:00:44,880
these pregnant women in our totals.

16
00:00:44,880 --> 00:00:46,490
So this should not be there.

17
00:00:46,490 --> 00:00:48,490
Maybe there should be separate variables for this,

18
00:00:48,490 --> 00:00:50,300
or there should be a separate section

19
00:00:50,300 --> 00:00:52,300
or whatever it might be the case.

20
00:00:52,300 --> 00:00:54,640
But obviously when we do our configuration,

21
00:00:54,640 --> 00:00:55,910
we can control this a bit, right?

22
00:00:55,910 --> 00:00:58,060
&#39;Cause even if it&#39;s displayed on the form this way,

23
00:00:58,060 --> 00:00:59,810
it doesn&#39;t mean we have to create

24
00:00:59,810 --> 00:01:01,540
these desegregations this way.

25
00:01:01,540 --> 00:01:03,680
We can always exclude that pregnant women

26
00:01:03,680 --> 00:01:06,630
from the desegregation we applied to these data elements,

27
00:01:06,630 --> 00:01:08,870
but you know, we still have that total column at the end,

28
00:01:08,870 --> 00:01:12,080
which is a bit jarring in the sense that, you know,

29
00:01:12,080 --> 00:01:15,810
the total for that row would not be correct by any means.

30
00:01:15,810 --> 00:01:18,060
So this is something you have to work with,

31
00:01:18,060 --> 00:01:20,940
the country to kind of design something

32
00:01:20,940 --> 00:01:23,580
that makes a bit more sense within your tools,

33
00:01:23,580 --> 00:01:25,890
because if you just have it the same way as it is,

34
00:01:25,890 --> 00:01:28,060
it&#39;s not really going to serve the purpose

35
00:01:28,060 --> 00:01:29,780
that you actually want it to do so,

36
00:01:29,780 --> 00:01:32,600
as your conclusions about this will be incorrect

37
00:01:32,600 --> 00:01:34,150
due to this duplicate counting.

38
00:01:37,940 --> 00:01:40,310
So another challenge that we often have

39
00:01:40,310 --> 00:01:43,820
is duplicate variables within the same form.

40
00:01:43,820 --> 00:01:46,570
So this is a delivery data set,

41
00:01:46,570 --> 00:01:49,310
and you might not notice it immediately,

42
00:01:49,310 --> 00:01:51,900
but if you take the individual items

43
00:01:51,900 --> 00:01:53,650
and start kind of adding them up

44
00:01:53,650 --> 00:01:55,340
by their categorization,

45
00:01:55,340 --> 00:01:57,690
which might not be immediately apparent,

46
00:01:57,690 --> 00:02:00,940
then we can see that there&#39;s actually different values

47
00:02:00,940 --> 00:02:04,210
reported by these different variables.

48
00:02:04,210 --> 00:02:07,410
So if we look at, for example, in this case, delivery,

49
00:02:07,410 --> 00:02:09,600
by nurse and delivery by midwife,

50
00:02:09,600 --> 00:02:11,450
we can add these up to get the total number

51
00:02:11,450 --> 00:02:13,930
of deliveries by the type of individual

52
00:02:13,930 --> 00:02:16,170
that&#39;s supporting these deliveries,

53
00:02:16,170 --> 00:02:18,100
the cadre essentially, right?

54
00:02:18,100 --> 00:02:20,080
And then if we look at the bottom part of this,

55
00:02:20,080 --> 00:02:22,780
delivery in facility, delivery in transit,

56
00:02:22,780 --> 00:02:26,000
delivery in community, this is location, right?

57
00:02:26,000 --> 00:02:29,070
So we add this total up and now we have different values.

58
00:02:29,070 --> 00:02:31,840
And in any case, even if we had the same value,

59
00:02:31,840 --> 00:02:35,800
we would have these same totals essentially,

60
00:02:35,800 --> 00:02:37,510
we were able to calculate the same total

61
00:02:37,510 --> 00:02:39,200
for the total number of deliveries

62
00:02:39,200 --> 00:02:43,180
within that period from separate data elements,

63
00:02:43,180 --> 00:02:44,220
probably you&#39;re going to have

64
00:02:44,220 --> 00:02:46,250
some disparity between the two, right,

65
00:02:46,250 --> 00:02:48,930
where the values are not going to be exactly the same.

66
00:02:48,930 --> 00:02:50,510
And even if they are,

67
00:02:50,510 --> 00:02:52,420
then you kind of have this duplicate data

68
00:02:52,420 --> 00:02:54,490
just in your system, so in a lot of ways,

69
00:02:54,490 --> 00:02:56,970
this is not ideal because if they are different,

70
00:02:56,970 --> 00:02:59,230
which value do you use, right?

71
00:02:59,230 --> 00:03:00,110
And if they are the same,

72
00:03:00,110 --> 00:03:01,400
then you&#39;re just storing duplicate data.

73
00:03:01,400 --> 00:03:04,300
And this might cause some confusion further down the line.

74
00:03:06,940 --> 00:03:09,370
So another issue that you might have

75
00:03:10,270 --> 00:03:14,100
are duplicate variables between different programs.

76
00:03:14,100 --> 00:03:19,100
So on the left side, we have the PMTCT program within HIV.

77
00:03:19,100 --> 00:03:23,270
And on the right side, we have the RMNCAH a program, right?

78
00:03:23,270 --> 00:03:27,730
And if you have a look at some of this information,

79
00:03:27,730 --> 00:03:30,240
then actually we can take,

80
00:03:30,240 --> 00:03:32,780
it might not seem apparent immediately,

81
00:03:32,780 --> 00:03:35,210
that&#39;s the thing with some of these challenges.

82
00:03:35,210 --> 00:03:38,640
It&#39;s only when we start to have a closer look

83
00:03:38,640 --> 00:03:42,610
at this information that where are we are able

84
00:03:42,610 --> 00:03:45,520
to discern that they are actually the same value.

85
00:03:45,520 --> 00:03:50,460
So in this case, if we look at alive but not HIV exposed,

86
00:03:50,460 --> 00:03:53,810
right, these are our number of mothers that have,

87
00:03:55,085 --> 00:03:57,380
who have HIV essentially.

88
00:03:57,380 --> 00:04:01,120
And then we have the number of deliveries or sorry,

89
00:04:01,120 --> 00:04:03,473
the mothers that do not have HIV, right?

90
00:04:04,660 --> 00:04:05,560
There&#39;s 62 mothers.

91
00:04:05,560 --> 00:04:08,310
And then if we look on the other side for the delivery data,

92
00:04:08,310 --> 00:04:11,800
the number of deliveries by skilled health personnel is 62.

93
00:04:11,800 --> 00:04:15,620
So actually these values in this case are duplicated.

94
00:04:15,620 --> 00:04:17,700
Now it might not be immediately apparent

95
00:04:17,700 --> 00:04:19,750
because the names are obviously not the same,

96
00:04:19,750 --> 00:04:22,170
but the whole idea is that the PMTCT program

97
00:04:22,170 --> 00:04:24,060
and the RMNCAH program in this case

98
00:04:24,060 --> 00:04:27,093
are now recording the same exact value.

99
00:04:27,930 --> 00:04:29,620
But they&#39;re just between different programs.

100
00:04:29,620 --> 00:04:31,550
And we see this a lot of the time, right?

101
00:04:31,550 --> 00:04:33,870
Particularly with things like delivery,

102
00:04:33,870 --> 00:04:36,360
anti-natal care, kind of core services

103
00:04:36,360 --> 00:04:38,100
where there&#39;s other denominators

104
00:04:38,100 --> 00:04:40,740
that are calculated within that program,

105
00:04:40,740 --> 00:04:43,320
that they need that service information,

106
00:04:43,320 --> 00:04:45,380
even things like outpatient consultations,

107
00:04:45,380 --> 00:04:46,870
but this becomes problematic now

108
00:04:46,870 --> 00:04:50,130
because you have multiple sources of information

109
00:04:50,130 --> 00:04:52,130
in your system and you no longer have

110
00:04:52,130 --> 00:04:54,400
a way to control which one to use.

111
00:04:54,400 --> 00:04:56,640
Because if you utilize the incorrect one

112
00:04:56,640 --> 00:04:58,500
or utilize the one of your choosing,

113
00:04:58,500 --> 00:05:00,850
then it might not be the correct value, right?

114
00:05:00,850 --> 00:05:04,840
So anytime you use these, it causes some issues

115
00:05:04,840 --> 00:05:06,830
down the line with your data quality.

116
00:05:06,830 --> 00:05:10,230
You can also have, if you&#39;re using different denominations

117
00:05:10,230 --> 00:05:11,750
in this case, for example,

118
00:05:11,750 --> 00:05:14,860
any of these values are being used as a denominators.

119
00:05:14,860 --> 00:05:17,560
They&#39;re no longer comparable across different programs

120
00:05:17,560 --> 00:05:19,940
because you&#39;re using different denominators essentially.

121
00:05:19,940 --> 00:05:23,570
So measuring these service statistics has some direct impact

122
00:05:23,570 --> 00:05:25,340
on the quality of the information

123
00:05:25,340 --> 00:05:26,790
that you are then presenting.

124
00:05:29,090 --> 00:05:31,780
So the last kind of duplicate, we&#39;re going to look at,

125
00:05:31,780 --> 00:05:35,610
are duplicate variables within the same program.

126
00:05:35,610 --> 00:05:39,960
So this also happens, so if we look at this information

127
00:05:39,960 --> 00:05:42,600
that we&#39;re presented with, on the left side,

128
00:05:42,600 --> 00:05:45,180
we have HIV core data elements.

129
00:05:45,180 --> 00:05:47,619
So data elements that are kind of core to the HIV program.

130
00:05:47,619 --> 00:05:50,960
Within HIV, there&#39;s always a PMTCT program

131
00:05:50,960 --> 00:05:55,850
of some kind, right, and that&#39;s on our right side.

132
00:05:55,850 --> 00:05:59,970
And we&#39;re actually seeing the exact same data elements

133
00:05:59,970 --> 00:06:03,310
are being collected between the two programs.

134
00:06:03,310 --> 00:06:06,450
Now, once again, this might not be immediately apparent

135
00:06:06,450 --> 00:06:08,850
because the names might not be exactly the same,

136
00:06:09,830 --> 00:06:11,450
but they could be close.

137
00:06:11,450 --> 00:06:14,032
So this is something that&#39;s also good to point out.

138
00:06:14,032 --> 00:06:16,930
So on the left side, our HIV core,

139
00:06:16,930 --> 00:06:20,570
we have anti-natal client tested for HIV,

140
00:06:20,570 --> 00:06:22,610
and this is essentially equivalent

141
00:06:22,610 --> 00:06:26,253
to PMTCT tested for HIV on our right side.

142
00:06:27,350 --> 00:06:30,520
This is also true for antenatal client HIV positive

143
00:06:30,520 --> 00:06:32,283
on the left side for HIV core,

144
00:06:33,120 --> 00:06:35,390
when we compare this on the right side

145
00:06:35,390 --> 00:06:39,530
to PMTCT anti-natal client HIV positive.

146
00:06:39,530 --> 00:06:42,360
So these two data elements actually represent

147
00:06:42,360 --> 00:06:44,660
the same piece of information.

148
00:06:44,660 --> 00:06:48,760
And this happens sometimes even within the same program.

149
00:06:48,760 --> 00:06:52,010
Now this could be true, even for tracker data,

150
00:06:52,010 --> 00:06:53,820
where information is being collected

151
00:06:55,193 --> 00:06:56,860
across different programs and the same information

152
00:06:56,860 --> 00:07:00,530
then aggregating to be representing the same value,

153
00:07:00,530 --> 00:07:03,370
but it&#39;s being collected in different places.

154
00:07:03,370 --> 00:07:06,450
So while we are focusing on aggregate information,

155
00:07:06,450 --> 00:07:09,520
this sometimes does happen within tracker data as well,

156
00:07:09,520 --> 00:07:11,890
where different programs are collecting information

157
00:07:11,890 --> 00:07:15,870
that eventually leads to calculation of the same value.

158
00:07:15,870 --> 00:07:18,140
So this is something that we have to be careful of

159
00:07:18,140 --> 00:07:20,700
anytime we have these duplicates essentially,

160
00:07:20,700 --> 00:07:24,610
because we&#39;re not sure what the source is for this program

161
00:07:24,610 --> 00:07:28,010
or for the health system or for wherever it is

162
00:07:28,010 --> 00:07:29,960
that you&#39;re analyzing this information.

163
00:07:31,160 --> 00:07:33,220
And to clean this up and rectify this

164
00:07:33,220 --> 00:07:34,960
can be a significant piece of work,

165
00:07:34,960 --> 00:07:37,220
particularly if there is a lot of ownership

166
00:07:37,220 --> 00:07:38,810
over this information.

167
00:07:38,810 --> 00:07:41,740
So in many cases, because it might be the case

168
00:07:41,740 --> 00:07:44,118
where this has been happening for a number of years,

169
00:07:44,118 --> 00:07:49,118
I mentioned at the beginning, in many cases,

170
00:07:49,240 --> 00:07:52,210
you know, we can think about when we introduce,

171
00:07:52,210 --> 00:07:55,310
this whole idea of revising forms,

172
00:07:55,310 --> 00:07:58,000
it&#39;s a long-term kind of process.

173
00:07:58,000 --> 00:08:00,300
It&#39;s not something that happens immediately.

174
00:08:00,300 --> 00:08:02,930
And you know, a lot of you would have been involved in this,

175
00:08:02,930 --> 00:08:06,480
I think in your own implementations in any case,

176
00:08:06,480 --> 00:08:08,220
but we have some power to affect this now

177
00:08:08,220 --> 00:08:11,490
with the introduction of these WTO packages, right,

178
00:08:11,490 --> 00:08:14,200
where we&#39;re trying to introduce kind of standards,

179
00:08:14,200 --> 00:08:16,700
trying to make sure there&#39;s not all these duplicates

180
00:08:16,700 --> 00:08:19,960
within or between different programs, but you know,

181
00:08:19,960 --> 00:08:21,710
it can still happen of course,

182
00:08:21,710 --> 00:08:24,880
but at least we have some way to kind of fall back

183
00:08:24,880 --> 00:08:27,790
on best practice and point to some areas

184
00:08:27,790 --> 00:08:29,524
where we might wanna rectify this

185
00:08:29,524 --> 00:08:31,140
going forward in the future.

186
00:08:31,140 --> 00:08:33,520
Because at present, if you look at this,

187
00:08:33,520 --> 00:08:37,020
it might be hard in practicality to fix this,

188
00:08:37,020 --> 00:08:39,210
immediately in particular, but going forward,

189
00:08:39,210 --> 00:08:42,020
I think this is where you can have a lot more influence

190
00:08:42,020 --> 00:08:43,960
and kind of change the way things are done

191
00:08:43,960 --> 00:08:45,890
to kind of standardize this

192
00:08:45,890 --> 00:08:48,140
and rationalize this information essentially.

